<?php

/**
 * Producto
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    ired.localhost
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Producto extends BaseProducto
{
  public function  __toString()
  {
      return sprintf('%s', $this->getNombre());
  }
  public function getProdTipo() {
    if($this->getTipo()==0) {
      return "NAC";
    } else {
      return "IMP";
    }
  }
  public function getProdLab() {
    if(empty($this["plname"])) {
      return "--";
    } else {
      return $this["plname"];
    }
  }
  public function getProdWeb($i) {
    if($i==1) {
      return $this["precio_usd_1"];
    } else if($i==2) {
      return $this["precio_usd_2"];
    } else if($i==3) {
      return $this["precio_usd_3"];
    } else if($i==4) {
      return $this["precio_usd_4"];
    } else if($i==5) {
      return $this["precio_usd_5"];
    } else if($i==6) {
      return $this["precio_usd_6"];
    } else if($i==7) {
      return $this["precio_usd_7"];
    }
  }
  public function getProdEstatus() {
    if($this->getActivo()==0) {
      return "DES-HABILITADO";
    } else {
      return "HABILITADO";
    }
  }
  public function getProdCompuestos() {
    $results = Doctrine_Query::create()
      ->select('c.nombre as cname, pc.producto_id')
      ->from('ProdCompuesto pc, pc.Compuesto c')
      ->where('pc.producto_id = ?', $this->getId())
      ->execute();
    $compuesto="";
    $i=0;
    foreach ($results as $result) {
      if($i==0) {
        $compuesto=$result["cname"];
      }else {
        $compuesto=$compuesto."; ".$result["cname"];
      }
      $i++;
    }
    return $compuesto;
  }
  /*public function getUrlImagen() {
    $results = Doctrine_Query::create()
      ->select('ig.id, ig.url_imagen')
      ->from('ProductoImg ig')
      ->where('ig.producto_id = ?', $this->getId())
      ->limit(1)
      ->execute();
    $compuesto="";
    foreach ($results as $result) {
      $compuesto=$result["url_imagen"];
    }
    return $compuesto;
  } */
  public function getCreatedAtTxt() {
    return format_datetime($this->getCreatedAt(), 'f', 'es_ES');
  }
  public function getUpdatedAtTxt() {
    return format_datetime($this->getUpdatedAt(), 'f', 'es_ES');
  }
  public function cambiarCosto($costo) {
    $price_usd1=$costo;
    $price_usd2=$costo;
    $price_usd3=$costo;
    $price_usd4=$costo;
    $price_usd5=$costo;
    $price_usd6=$costo;
    $price_usd7=$costo;
    $price_usd8=$costo;

    if(!empty($this["util_usd_1"])) {
      if(numero_cantProd($this["util_usd_1"])>0) {
        $price_usd1=number_format((numero_cantProd($this["util_usd_1"]*$costo)/100)+$costo, 4, '.', '');
      }
    }
    if(!empty($this["util_usd_2"])) {
      if(numero_cantProd($this["util_usd_2"])>0) {
        $price_usd2=number_format((numero_cantProd($this["util_usd_2"]*$costo)/100)+$costo, 4, '.', '');
      }
    }
    if(!empty($this["util_usd_3"])) {
      if(numero_cantProd($this["util_usd_3"])>0) {
        $price_usd3=number_format((numero_cantProd($this["util_usd_3"]*$costo)/100)+$costo, 4, '.', '');
      }
    }
    if(!empty($this["util_usd_4"])) {
      if(numero_cantProd($this["util_usd_4"])>0) {
        $price_usd4=number_format((numero_cantProd($this["util_usd_4"]*$costo)/100)+$costo, 4, '.', '');
      }
    }
    if(!empty($this["util_usd_5"])) {
      if(numero_cantProd($this["util_usd_5"])>0) {
        $price_usd5=number_format((numero_cantProd($this["util_usd_5"]*$costo)/100)+$costo, 4, '.', '');
      }
    }
    if(!empty($this["util_usd_6"])) {
      if(numero_cantProd($this["util_usd_6"])>0) {
        $price_usd6=number_format((numero_cantProd($this["util_usd_6"]*$costo)/100)+$costo, 4, '.', '');
      }
    }
    if(!empty($this["util_usd_7"])) {
      if(numero_cantProd($this["util_usd_7"])>0) {
        $price_usd7=number_format((numero_cantProd($this["util_usd_7"]*$costo)/100)+$costo, 4, '.', '');
      }
    }
    if(!empty($this["util_usd_8"])) {
      if(numero_cantProd($this["util_usd_8"])>0) {
        $price_usd8=number_format((numero_cantProd($this["util_usd_8"]*$costo)/100)+$costo, 4, '.', '');
      }
    }

    $prod = Doctrine_Core::getTable('Producto')->findOneBy('id', $this->getId());
    $prod->costo_usd_1=$costo;
    $prod->precio_usd_8=$price_usd8;
    $prod->save();

    return true;
  }
}
function numero_cantProd($str) {
  $stripped = str_replace(' ', '', $str);
  $number = str_replace(',', '', $stripped);
  return floatval($number);
}
