<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Caja', 'doctrine');

/**
 * BaseCaja
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $empresa_id
 * @property string $nombre
 * @property boolean $tipo
 * @property boolean $status
 * @property date $fecha
 * @property string $descripcion
 * @property Doctrine_Collection $User
 * @property Empresa $Empresa
 * @property Doctrine_Collection $Factura
 * @property Doctrine_Collection $CajaDet
 * @property Doctrine_Collection $CajaCorte
 * @property Doctrine_Collection $CajaUser
 * @property Doctrine_Collection $CajaCola
 * 
 * @method integer             getId()          Returns the current record's "id" value
 * @method integer             getEmpresaId()   Returns the current record's "empresa_id" value
 * @method string              getNombre()      Returns the current record's "nombre" value
 * @method boolean             getTipo()        Returns the current record's "tipo" value
 * @method boolean             getStatus()      Returns the current record's "status" value
 * @method date                getFecha()       Returns the current record's "fecha" value
 * @method string              getDescripcion() Returns the current record's "descripcion" value
 * @method Doctrine_Collection getUser()        Returns the current record's "User" collection
 * @method Empresa             getEmpresa()     Returns the current record's "Empresa" value
 * @method Doctrine_Collection getFactura()     Returns the current record's "Factura" collection
 * @method Doctrine_Collection getCajaDet()     Returns the current record's "CajaDet" collection
 * @method Doctrine_Collection getCajaCorte()   Returns the current record's "CajaCorte" collection
 * @method Doctrine_Collection getCajaUser()    Returns the current record's "CajaUser" collection
 * @method Doctrine_Collection getCajaCola()    Returns the current record's "CajaCola" collection
 * @method Caja                setId()          Sets the current record's "id" value
 * @method Caja                setEmpresaId()   Sets the current record's "empresa_id" value
 * @method Caja                setNombre()      Sets the current record's "nombre" value
 * @method Caja                setTipo()        Sets the current record's "tipo" value
 * @method Caja                setStatus()      Sets the current record's "status" value
 * @method Caja                setFecha()       Sets the current record's "fecha" value
 * @method Caja                setDescripcion() Sets the current record's "descripcion" value
 * @method Caja                setUser()        Sets the current record's "User" collection
 * @method Caja                setEmpresa()     Sets the current record's "Empresa" value
 * @method Caja                setFactura()     Sets the current record's "Factura" collection
 * @method Caja                setCajaDet()     Sets the current record's "CajaDet" collection
 * @method Caja                setCajaCorte()   Sets the current record's "CajaCorte" collection
 * @method Caja                setCajaUser()    Sets the current record's "CajaUser" collection
 * @method Caja                setCajaCola()    Sets the current record's "CajaCola" collection
 * 
 * @package    ired.localhost
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCaja extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('caja');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'length' => 4,
             ));
        $this->hasColumn('empresa_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('nombre', 'string', 200, array(
             'type' => 'string',
             'notnull' => true,
             'default' => false,
             'length' => 200,
             ));
        $this->hasColumn('tipo', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('status', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('fecha', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('descripcion', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('sfGuardUser as User', array(
             'refClass' => 'CajaUser',
             'local' => 'caja_id',
             'foreign' => 'user_id'));

        $this->hasOne('Empresa', array(
             'local' => 'empresa_id',
             'foreign' => 'id'));

        $this->hasMany('Factura', array(
             'local' => 'id',
             'foreign' => 'caja_id'));

        $this->hasMany('CajaDet', array(
             'local' => 'id',
             'foreign' => 'caja_id'));

        $this->hasMany('CajaCorte', array(
             'local' => 'id',
             'foreign' => 'caja_id'));

        $this->hasMany('CajaUser', array(
             'local' => 'id',
             'foreign' => 'caja_id'));

        $this->hasMany('CajaCola', array(
             'local' => 'id',
             'foreign' => 'caja_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $signable0 = new Doctrine_Template_Signable();
        $this->actAs($timestampable0);
        $this->actAs($signable0);
    }
}