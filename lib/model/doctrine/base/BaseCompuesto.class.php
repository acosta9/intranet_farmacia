<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Compuesto', 'doctrine');

/**
 * BaseCompuesto
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $nombre
 * @property string $descripcion
 * @property Doctrine_Collection $Producto
 * @property Doctrine_Collection $ProdCompuesto
 * 
 * @method integer             getId()            Returns the current record's "id" value
 * @method string              getNombre()        Returns the current record's "nombre" value
 * @method string              getDescripcion()   Returns the current record's "descripcion" value
 * @method Doctrine_Collection getProducto()      Returns the current record's "Producto" collection
 * @method Doctrine_Collection getProdCompuesto() Returns the current record's "ProdCompuesto" collection
 * @method Compuesto           setId()            Sets the current record's "id" value
 * @method Compuesto           setNombre()        Sets the current record's "nombre" value
 * @method Compuesto           setDescripcion()   Sets the current record's "descripcion" value
 * @method Compuesto           setProducto()      Sets the current record's "Producto" collection
 * @method Compuesto           setProdCompuesto() Sets the current record's "ProdCompuesto" collection
 * 
 * @package    ired.localhost
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCompuesto extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('compuesto');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('nombre', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '',
             ));
        $this->hasColumn('descripcion', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Producto', array(
             'refClass' => 'ProdCompuesto',
             'local' => 'compuesto_id',
             'foreign' => 'producto_id'));

        $this->hasMany('ProdCompuesto', array(
             'local' => 'id',
             'foreign' => 'compuesto_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $signable0 = new Doctrine_Template_Signable();
        $this->actAs($timestampable0);
        $this->actAs($signable0);
    }
}