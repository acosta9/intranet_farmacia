<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Traslado', 'doctrine');

/**
 * BaseTraslado
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $ncontrol
 * @property integer $empresa_desde
 * @property integer $deposito_desde
 * @property integer $empresa_hasta
 * @property integer $deposito_hasta
 * @property integer $estatus
 * @property string $tasa_cambio
 * @property string $monto
 * @property InvDeposito $InvDeposito
 * @property InvDeposito $InvDeposito2
 * @property Doctrine_Collection $TrasladoDet
 * @property Empresa $Empresa
 * @property Empresa $Empresa2
 * @property Doctrine_Collection $AlmacenTransito
 * 
 * @method integer             getId()              Returns the current record's "id" value
 * @method string              getNcontrol()        Returns the current record's "ncontrol" value
 * @method integer             getEmpresaDesde()    Returns the current record's "empresa_desde" value
 * @method integer             getDepositoDesde()   Returns the current record's "deposito_desde" value
 * @method integer             getEmpresaHasta()    Returns the current record's "empresa_hasta" value
 * @method integer             getDepositoHasta()   Returns the current record's "deposito_hasta" value
 * @method integer             getEstatus()         Returns the current record's "estatus" value
 * @method string              getTasaCambio()      Returns the current record's "tasa_cambio" value
 * @method string              getMonto()           Returns the current record's "monto" value
 * @method InvDeposito         getInvDeposito()     Returns the current record's "InvDeposito" value
 * @method InvDeposito         getInvDeposito2()    Returns the current record's "InvDeposito2" value
 * @method Doctrine_Collection getTrasladoDet()     Returns the current record's "TrasladoDet" collection
 * @method Empresa             getEmpresa()         Returns the current record's "Empresa" value
 * @method Empresa             getEmpresa2()        Returns the current record's "Empresa2" value
 * @method Doctrine_Collection getAlmacenTransito() Returns the current record's "AlmacenTransito" collection
 * @method Traslado            setId()              Sets the current record's "id" value
 * @method Traslado            setNcontrol()        Sets the current record's "ncontrol" value
 * @method Traslado            setEmpresaDesde()    Sets the current record's "empresa_desde" value
 * @method Traslado            setDepositoDesde()   Sets the current record's "deposito_desde" value
 * @method Traslado            setEmpresaHasta()    Sets the current record's "empresa_hasta" value
 * @method Traslado            setDepositoHasta()   Sets the current record's "deposito_hasta" value
 * @method Traslado            setEstatus()         Sets the current record's "estatus" value
 * @method Traslado            setTasaCambio()      Sets the current record's "tasa_cambio" value
 * @method Traslado            setMonto()           Sets the current record's "monto" value
 * @method Traslado            setInvDeposito()     Sets the current record's "InvDeposito" value
 * @method Traslado            setInvDeposito2()    Sets the current record's "InvDeposito2" value
 * @method Traslado            setTrasladoDet()     Sets the current record's "TrasladoDet" collection
 * @method Traslado            setEmpresa()         Sets the current record's "Empresa" value
 * @method Traslado            setEmpresa2()        Sets the current record's "Empresa2" value
 * @method Traslado            setAlmacenTransito() Sets the current record's "AlmacenTransito" collection
 * 
 * @package    ired.localhost
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTraslado extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('traslado');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'length' => 4,
             ));
        $this->hasColumn('ncontrol', 'string', 20, array(
             'type' => 'string',
             'notnull' => false,
             'unique' => false,
             'length' => 20,
             ));
        $this->hasColumn('empresa_desde', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('deposito_desde', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('empresa_hasta', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('deposito_hasta', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('estatus', 'integer', 1, array(
             'type' => 'integer',
             'default' => 1,
             'unsigned' => true,
             'notnull' => true,
             'length' => 1,
             ));
        $this->hasColumn('tasa_cambio', 'string', 20, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 20,
             ));
        $this->hasColumn('monto', 'string', 20, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 20,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('InvDeposito', array(
             'local' => 'deposito_desde',
             'foreign' => 'id'));

        $this->hasOne('InvDeposito as InvDeposito2', array(
             'local' => 'deposito_hasta',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));

        $this->hasMany('TrasladoDet', array(
             'local' => 'id',
             'foreign' => 'traslado_id'));

        $this->hasOne('Empresa', array(
             'local' => 'empresa_desde',
             'foreign' => 'id'));

        $this->hasOne('Empresa as Empresa2', array(
             'local' => 'empresa_hasta',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));

        $this->hasMany('AlmacenTransito', array(
             'local' => 'id',
             'foreign' => 'traslado_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $signable0 = new Doctrine_Template_Signable();
        $this->actAs($timestampable0);
        $this->actAs($signable0);
    }
}