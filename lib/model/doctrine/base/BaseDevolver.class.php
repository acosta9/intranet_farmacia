<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Devolver', 'doctrine');

/**
 * BaseDevolver
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $empresa_id
 * @property integer $deposito_id
 * @property integer $factura_id
 * @property string $num_nota_credito
 * @property string $codigof
 * @property integer $cliente_id
 * @property date $fecha
 * @property string $descripcion
 * @property Empresa $Empresa
 * @property Factura $Factura
 * @property Cliente $Cliente
 * @property Doctrine_Collection $DevolverDet
 * 
 * @method integer             getId()               Returns the current record's "id" value
 * @method integer             getEmpresaId()        Returns the current record's "empresa_id" value
 * @method integer             getDepositoId()       Returns the current record's "deposito_id" value
 * @method integer             getFacturaId()        Returns the current record's "factura_id" value
 * @method string              getNumNotaCredito()   Returns the current record's "num_nota_credito" value
 * @method string              getCodigof()          Returns the current record's "codigof" value
 * @method integer             getClienteId()        Returns the current record's "cliente_id" value
 * @method date                getFecha()            Returns the current record's "fecha" value
 * @method string              getDescripcion()      Returns the current record's "descripcion" value
 * @method Empresa             getEmpresa()          Returns the current record's "Empresa" value
 * @method Factura             getFactura()          Returns the current record's "Factura" value
 * @method Cliente             getCliente()          Returns the current record's "Cliente" value
 * @method Doctrine_Collection getDevolverDet()      Returns the current record's "DevolverDet" collection
 * @method Devolver            setId()               Sets the current record's "id" value
 * @method Devolver            setEmpresaId()        Sets the current record's "empresa_id" value
 * @method Devolver            setDepositoId()       Sets the current record's "deposito_id" value
 * @method Devolver            setFacturaId()        Sets the current record's "factura_id" value
 * @method Devolver            setNumNotaCredito()   Sets the current record's "num_nota_credito" value
 * @method Devolver            setCodigof()          Sets the current record's "codigof" value
 * @method Devolver            setClienteId()        Sets the current record's "cliente_id" value
 * @method Devolver            setFecha()            Sets the current record's "fecha" value
 * @method Devolver            setDescripcion()      Sets the current record's "descripcion" value
 * @method Devolver            setEmpresa()          Sets the current record's "Empresa" value
 * @method Devolver            setFactura()          Sets the current record's "Factura" value
 * @method Devolver            setCliente()          Sets the current record's "Cliente" value
 * @method Devolver            setDevolverDet()      Sets the current record's "DevolverDet" collection
 * 
 * @package    ired.localhost
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDevolver extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('devolver');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'length' => 4,
             ));
        $this->hasColumn('empresa_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('deposito_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('factura_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('num_nota_credito', 'string', 20, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 20,
             ));
        $this->hasColumn('codigof', 'string', 20, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 20,
             ));
        $this->hasColumn('cliente_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('fecha', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('descripcion', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Empresa', array(
             'local' => 'empresa_id',
             'foreign' => 'id'));

        $this->hasOne('Factura', array(
             'local' => 'factura_id',
             'foreign' => 'id'));

        $this->hasOne('Cliente', array(
             'local' => 'cliente_id',
             'foreign' => 'id'));

        $this->hasMany('DevolverDet', array(
             'local' => 'id',
             'foreign' => 'devolver_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $signable0 = new Doctrine_Template_Signable();
        $this->actAs($timestampable0);
        $this->actAs($signable0);
    }
}