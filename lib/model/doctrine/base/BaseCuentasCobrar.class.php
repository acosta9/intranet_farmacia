<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('CuentasCobrar', 'doctrine');

/**
 * BaseCuentasCobrar
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property date $fecha
 * @property string $dias_credito
 * @property integer $empresa_id
 * @property integer $cliente_id
 * @property integer $factura_id
 * @property integer $nota_entrega_id
 * @property string $total
 * @property string $monto_faltante
 * @property string $monto_pagado
 * @property string $tasa_cambio
 * @property integer $estatus
 * @property Doctrine_Collection $Retenciones
 * @property Doctrine_Collection $ReciboPago
 * @property Doctrine_Collection $NotaCreditoDet
 * @property Empresa $Empresa
 * @property Cliente $Cliente
 * @property Factura $Factura
 * @property NotaEntrega $NotaEntrega
 * 
 * @method integer             getId()              Returns the current record's "id" value
 * @method date                getFecha()           Returns the current record's "fecha" value
 * @method string              getDiasCredito()     Returns the current record's "dias_credito" value
 * @method integer             getEmpresaId()       Returns the current record's "empresa_id" value
 * @method integer             getClienteId()       Returns the current record's "cliente_id" value
 * @method integer             getFacturaId()       Returns the current record's "factura_id" value
 * @method integer             getNotaEntregaId()   Returns the current record's "nota_entrega_id" value
 * @method string              getTotal()           Returns the current record's "total" value
 * @method string              getMontoFaltante()   Returns the current record's "monto_faltante" value
 * @method string              getMontoPagado()     Returns the current record's "monto_pagado" value
 * @method string              getTasaCambio()      Returns the current record's "tasa_cambio" value
 * @method integer             getEstatus()         Returns the current record's "estatus" value
 * @method Doctrine_Collection getRetenciones()     Returns the current record's "Retenciones" collection
 * @method Doctrine_Collection getReciboPago()      Returns the current record's "ReciboPago" collection
 * @method Doctrine_Collection getNotaCreditoDet()  Returns the current record's "NotaCreditoDet" collection
 * @method Empresa             getEmpresa()         Returns the current record's "Empresa" value
 * @method Cliente             getCliente()         Returns the current record's "Cliente" value
 * @method Factura             getFactura()         Returns the current record's "Factura" value
 * @method NotaEntrega         getNotaEntrega()     Returns the current record's "NotaEntrega" value
 * @method CuentasCobrar       setId()              Sets the current record's "id" value
 * @method CuentasCobrar       setFecha()           Sets the current record's "fecha" value
 * @method CuentasCobrar       setDiasCredito()     Sets the current record's "dias_credito" value
 * @method CuentasCobrar       setEmpresaId()       Sets the current record's "empresa_id" value
 * @method CuentasCobrar       setClienteId()       Sets the current record's "cliente_id" value
 * @method CuentasCobrar       setFacturaId()       Sets the current record's "factura_id" value
 * @method CuentasCobrar       setNotaEntregaId()   Sets the current record's "nota_entrega_id" value
 * @method CuentasCobrar       setTotal()           Sets the current record's "total" value
 * @method CuentasCobrar       setMontoFaltante()   Sets the current record's "monto_faltante" value
 * @method CuentasCobrar       setMontoPagado()     Sets the current record's "monto_pagado" value
 * @method CuentasCobrar       setTasaCambio()      Sets the current record's "tasa_cambio" value
 * @method CuentasCobrar       setEstatus()         Sets the current record's "estatus" value
 * @method CuentasCobrar       setRetenciones()     Sets the current record's "Retenciones" collection
 * @method CuentasCobrar       setReciboPago()      Sets the current record's "ReciboPago" collection
 * @method CuentasCobrar       setNotaCreditoDet()  Sets the current record's "NotaCreditoDet" collection
 * @method CuentasCobrar       setEmpresa()         Sets the current record's "Empresa" value
 * @method CuentasCobrar       setCliente()         Sets the current record's "Cliente" value
 * @method CuentasCobrar       setFactura()         Sets the current record's "Factura" value
 * @method CuentasCobrar       setNotaEntrega()     Sets the current record's "NotaEntrega" value
 * 
 * @package    ired.localhost
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCuentasCobrar extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('cuentas_cobrar');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'length' => 4,
             ));
        $this->hasColumn('fecha', 'date', 25, array(
             'type' => 'date',
             'notnull' => true,
             'length' => 25,
             ));
        $this->hasColumn('dias_credito', 'string', 4, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('empresa_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('cliente_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('factura_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => false,
             'length' => 4,
             ));
        $this->hasColumn('nota_entrega_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => false,
             'length' => 4,
             ));
        $this->hasColumn('total', 'string', 20, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('monto_faltante', 'string', 20, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 20,
             ));
        $this->hasColumn('monto_pagado', 'string', 20, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 20,
             ));
        $this->hasColumn('tasa_cambio', 'string', 20, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 20,
             ));
        $this->hasColumn('estatus', 'integer', 1, array(
             'type' => 'integer',
             'default' => 1,
             'unsigned' => true,
             'notnull' => true,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Retenciones', array(
             'local' => 'id',
             'foreign' => 'cuentas_cobrar_id'));

        $this->hasMany('ReciboPago', array(
             'local' => 'id',
             'foreign' => 'cuentas_cobrar_id'));

        $this->hasMany('NotaCreditoDet', array(
             'local' => 'id',
             'foreign' => 'cuentas_cobrar_id'));

        $this->hasOne('Empresa', array(
             'local' => 'empresa_id',
             'foreign' => 'id'));

        $this->hasOne('Cliente', array(
             'local' => 'cliente_id',
             'foreign' => 'id'));

        $this->hasOne('Factura', array(
             'local' => 'factura_id',
             'foreign' => 'id'));

        $this->hasOne('NotaEntrega', array(
             'local' => 'nota_entrega_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}