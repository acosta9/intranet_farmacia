<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('FormaPago', 'doctrine');

/**
 * BaseFormaPago
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property tinyint $moneda
 * @property string $nombre
 * @property string $acronimo
 * @property boolean $activo
 * @property string $descripcion
 * @property Doctrine_Collection $ReciboPago
 * @property Doctrine_Collection $NotaCredito
 * @property Doctrine_Collection $ReciboPagoCompra
 * @property Doctrine_Collection $NotaDebito
 * 
 * @method integer             getId()               Returns the current record's "id" value
 * @method tinyint             getMoneda()           Returns the current record's "moneda" value
 * @method string              getNombre()           Returns the current record's "nombre" value
 * @method string              getAcronimo()         Returns the current record's "acronimo" value
 * @method boolean             getActivo()           Returns the current record's "activo" value
 * @method string              getDescripcion()      Returns the current record's "descripcion" value
 * @method Doctrine_Collection getReciboPago()       Returns the current record's "ReciboPago" collection
 * @method Doctrine_Collection getNotaCredito()      Returns the current record's "NotaCredito" collection
 * @method Doctrine_Collection getReciboPagoCompra() Returns the current record's "ReciboPagoCompra" collection
 * @method Doctrine_Collection getNotaDebito()       Returns the current record's "NotaDebito" collection
 * @method FormaPago           setId()               Sets the current record's "id" value
 * @method FormaPago           setMoneda()           Sets the current record's "moneda" value
 * @method FormaPago           setNombre()           Sets the current record's "nombre" value
 * @method FormaPago           setAcronimo()         Sets the current record's "acronimo" value
 * @method FormaPago           setActivo()           Sets the current record's "activo" value
 * @method FormaPago           setDescripcion()      Sets the current record's "descripcion" value
 * @method FormaPago           setReciboPago()       Sets the current record's "ReciboPago" collection
 * @method FormaPago           setNotaCredito()      Sets the current record's "NotaCredito" collection
 * @method FormaPago           setReciboPagoCompra() Sets the current record's "ReciboPagoCompra" collection
 * @method FormaPago           setNotaDebito()       Sets the current record's "NotaDebito" collection
 * 
 * @package    ired.localhost
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFormaPago extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('forma_pago');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'length' => 4,
             ));
        $this->hasColumn('moneda', 'tinyint', null, array(
             'type' => 'tinyint',
             'unsigned' => true,
             'notnull' => true,
             ));
        $this->hasColumn('nombre', 'string', 200, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 200,
             ));
        $this->hasColumn('acronimo', 'string', 20, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('activo', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('descripcion', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('ReciboPago', array(
             'local' => 'id',
             'foreign' => 'forma_pago_id'));

        $this->hasMany('NotaCredito', array(
             'local' => 'id',
             'foreign' => 'forma_pago_id'));

        $this->hasMany('ReciboPagoCompra', array(
             'local' => 'id',
             'foreign' => 'forma_pago_id'));

        $this->hasMany('NotaDebito', array(
             'local' => 'id',
             'foreign' => 'forma_pago_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $signable0 = new Doctrine_Template_Signable();
        $this->actAs($timestampable0);
        $this->actAs($signable0);
    }
}