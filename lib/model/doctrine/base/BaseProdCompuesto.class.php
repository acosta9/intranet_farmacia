<?php

/**
 * BaseProdCompuesto
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $producto_id
 * @property integer $compuesto_id
 * @property Producto $Producto
 * @property Compuesto $Compuesto
 * 
 * @method integer       getProductoId()   Returns the current record's "producto_id" value
 * @method integer       getCompuestoId()  Returns the current record's "compuesto_id" value
 * @method Producto      getProducto()     Returns the current record's "Producto" value
 * @method Compuesto     getCompuesto()    Returns the current record's "Compuesto" value
 * @method ProdCompuesto setProductoId()   Sets the current record's "producto_id" value
 * @method ProdCompuesto setCompuestoId()  Sets the current record's "compuesto_id" value
 * @method ProdCompuesto setProducto()     Sets the current record's "Producto" value
 * @method ProdCompuesto setCompuesto()    Sets the current record's "Compuesto" value
 * 
 * @package    ired.localhost
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProdCompuesto extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('prod_compuesto');
        $this->hasColumn('producto_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'length' => 4,
             ));
        $this->hasColumn('compuesto_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'length' => 4,
             ));

        $this->option('symfony', array(
             'form' => false,
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Producto', array(
             'local' => 'producto_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Compuesto', array(
             'local' => 'compuesto_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}