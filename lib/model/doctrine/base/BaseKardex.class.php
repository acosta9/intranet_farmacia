<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Kardex', 'doctrine');

/**
 * BaseKardex
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $id
 * @property integer $empresa_id
 * @property integer $deposito_id
 * @property integer $producto_id
 * @property integer $user_id
 * @property string $tabla
 * @property integer $tabla_id
 * @property timestamp $fecha
 * @property integer $cantidad
 * @property string $price_unit
 * @property string $price_tot
 * @property tinyint $tipo
 * @property string $concepto
 * @property string $lote
 * @property string $fvenc
 * @property Producto $Producto
 * @property InvDeposito $InvDeposito
 * @property Empresa $Empresa
 * @property sfGuardUser $User
 * 
 * @method string      getId()          Returns the current record's "id" value
 * @method integer     getEmpresaId()   Returns the current record's "empresa_id" value
 * @method integer     getDepositoId()  Returns the current record's "deposito_id" value
 * @method integer     getProductoId()  Returns the current record's "producto_id" value
 * @method integer     getUserId()      Returns the current record's "user_id" value
 * @method string      getTabla()       Returns the current record's "tabla" value
 * @method integer     getTablaId()     Returns the current record's "tabla_id" value
 * @method timestamp   getFecha()       Returns the current record's "fecha" value
 * @method integer     getCantidad()    Returns the current record's "cantidad" value
 * @method string      getPriceUnit()   Returns the current record's "price_unit" value
 * @method string      getPriceTot()    Returns the current record's "price_tot" value
 * @method tinyint     getTipo()        Returns the current record's "tipo" value
 * @method string      getConcepto()    Returns the current record's "concepto" value
 * @method string      getLote()        Returns the current record's "lote" value
 * @method string      getFvenc()       Returns the current record's "fvenc" value
 * @method Producto    getProducto()    Returns the current record's "Producto" value
 * @method InvDeposito getInvDeposito() Returns the current record's "InvDeposito" value
 * @method Empresa     getEmpresa()     Returns the current record's "Empresa" value
 * @method sfGuardUser getUser()        Returns the current record's "User" value
 * @method Kardex      setId()          Sets the current record's "id" value
 * @method Kardex      setEmpresaId()   Sets the current record's "empresa_id" value
 * @method Kardex      setDepositoId()  Sets the current record's "deposito_id" value
 * @method Kardex      setProductoId()  Sets the current record's "producto_id" value
 * @method Kardex      setUserId()      Sets the current record's "user_id" value
 * @method Kardex      setTabla()       Sets the current record's "tabla" value
 * @method Kardex      setTablaId()     Sets the current record's "tabla_id" value
 * @method Kardex      setFecha()       Sets the current record's "fecha" value
 * @method Kardex      setCantidad()    Sets the current record's "cantidad" value
 * @method Kardex      setPriceUnit()   Sets the current record's "price_unit" value
 * @method Kardex      setPriceTot()    Sets the current record's "price_tot" value
 * @method Kardex      setTipo()        Sets the current record's "tipo" value
 * @method Kardex      setConcepto()    Sets the current record's "concepto" value
 * @method Kardex      setLote()        Sets the current record's "lote" value
 * @method Kardex      setFvenc()       Sets the current record's "fvenc" value
 * @method Kardex      setProducto()    Sets the current record's "Producto" value
 * @method Kardex      setInvDeposito() Sets the current record's "InvDeposito" value
 * @method Kardex      setEmpresa()     Sets the current record's "Empresa" value
 * @method Kardex      setUser()        Sets the current record's "User" value
 * 
 * @package    ired.localhost
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseKardex extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('kardex');
        $this->hasColumn('id', 'string', 20, array(
             'type' => 'string',
             'primary' => true,
             'length' => 20,
             ));
        $this->hasColumn('empresa_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('deposito_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('producto_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('tabla', 'string', 20, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('tabla_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('fecha', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('cantidad', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('price_unit', 'string', 20, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('price_tot', 'string', 20, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('tipo', 'tinyint', null, array(
             'type' => 'tinyint',
             'notnull' => true,
             ));
        $this->hasColumn('concepto', 'string', 200, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 200,
             ));
        $this->hasColumn('lote', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             ));
        $this->hasColumn('fvenc', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Producto', array(
             'local' => 'producto_id',
             'foreign' => 'id'));

        $this->hasOne('InvDeposito', array(
             'local' => 'deposito_id',
             'foreign' => 'id'));

        $this->hasOne('Empresa', array(
             'local' => 'empresa_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id'));
    }
}