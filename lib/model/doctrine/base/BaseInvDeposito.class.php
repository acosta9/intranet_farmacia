<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('InvDeposito', 'doctrine');

/**
 * BaseInvDeposito
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $empresa_id
 * @property string $nombre
 * @property string $acronimo
 * @property tinyint $tipo
 * @property string $descripcion
 * @property Doctrine_Collection $Oferta
 * @property Doctrine_Collection $Inventario
 * @property Empresa $Empresa
 * @property Doctrine_Collection $Factura
 * @property Doctrine_Collection $NotaEntrega
 * @property Doctrine_Collection $Traslado
 * @property Doctrine_Collection $ServerConf
 * @property Doctrine_Collection $Kardex
 * @property Doctrine_Collection $ProdVendidos
 * @property Doctrine_Collection $ProdComprados
 * @property Doctrine_Collection $InvAjuste
 * @property Doctrine_Collection $InvEntrada
 * @property Doctrine_Collection $InvSalida
 * @property Doctrine_Collection $AlmacenTransito
 * @property Doctrine_Collection $OrdenCompra
 * @property Doctrine_Collection $FacturaCompra
 * 
 * @method integer             getId()              Returns the current record's "id" value
 * @method integer             getEmpresaId()       Returns the current record's "empresa_id" value
 * @method string              getNombre()          Returns the current record's "nombre" value
 * @method string              getAcronimo()        Returns the current record's "acronimo" value
 * @method tinyint             getTipo()            Returns the current record's "tipo" value
 * @method string              getDescripcion()     Returns the current record's "descripcion" value
 * @method Doctrine_Collection getOferta()          Returns the current record's "Oferta" collection
 * @method Doctrine_Collection getInventario()      Returns the current record's "Inventario" collection
 * @method Empresa             getEmpresa()         Returns the current record's "Empresa" value
 * @method Doctrine_Collection getFactura()         Returns the current record's "Factura" collection
 * @method Doctrine_Collection getNotaEntrega()     Returns the current record's "NotaEntrega" collection
 * @method Doctrine_Collection getTraslado()        Returns the current record's "Traslado" collection
 * @method Doctrine_Collection getServerConf()      Returns the current record's "ServerConf" collection
 * @method Doctrine_Collection getKardex()          Returns the current record's "Kardex" collection
 * @method Doctrine_Collection getProdVendidos()    Returns the current record's "ProdVendidos" collection
 * @method Doctrine_Collection getProdComprados()   Returns the current record's "ProdComprados" collection
 * @method Doctrine_Collection getInvAjuste()       Returns the current record's "InvAjuste" collection
 * @method Doctrine_Collection getInvEntrada()      Returns the current record's "InvEntrada" collection
 * @method Doctrine_Collection getInvSalida()       Returns the current record's "InvSalida" collection
 * @method Doctrine_Collection getAlmacenTransito() Returns the current record's "AlmacenTransito" collection
 * @method Doctrine_Collection getOrdenCompra()     Returns the current record's "OrdenCompra" collection
 * @method Doctrine_Collection getFacturaCompra()   Returns the current record's "FacturaCompra" collection
 * @method InvDeposito         setId()              Sets the current record's "id" value
 * @method InvDeposito         setEmpresaId()       Sets the current record's "empresa_id" value
 * @method InvDeposito         setNombre()          Sets the current record's "nombre" value
 * @method InvDeposito         setAcronimo()        Sets the current record's "acronimo" value
 * @method InvDeposito         setTipo()            Sets the current record's "tipo" value
 * @method InvDeposito         setDescripcion()     Sets the current record's "descripcion" value
 * @method InvDeposito         setOferta()          Sets the current record's "Oferta" collection
 * @method InvDeposito         setInventario()      Sets the current record's "Inventario" collection
 * @method InvDeposito         setEmpresa()         Sets the current record's "Empresa" value
 * @method InvDeposito         setFactura()         Sets the current record's "Factura" collection
 * @method InvDeposito         setNotaEntrega()     Sets the current record's "NotaEntrega" collection
 * @method InvDeposito         setTraslado()        Sets the current record's "Traslado" collection
 * @method InvDeposito         setServerConf()      Sets the current record's "ServerConf" collection
 * @method InvDeposito         setKardex()          Sets the current record's "Kardex" collection
 * @method InvDeposito         setProdVendidos()    Sets the current record's "ProdVendidos" collection
 * @method InvDeposito         setProdComprados()   Sets the current record's "ProdComprados" collection
 * @method InvDeposito         setInvAjuste()       Sets the current record's "InvAjuste" collection
 * @method InvDeposito         setInvEntrada()      Sets the current record's "InvEntrada" collection
 * @method InvDeposito         setInvSalida()       Sets the current record's "InvSalida" collection
 * @method InvDeposito         setAlmacenTransito() Sets the current record's "AlmacenTransito" collection
 * @method InvDeposito         setOrdenCompra()     Sets the current record's "OrdenCompra" collection
 * @method InvDeposito         setFacturaCompra()   Sets the current record's "FacturaCompra" collection
 * 
 * @package    ired.localhost
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseInvDeposito extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('inv_deposito');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'length' => 4,
             ));
        $this->hasColumn('empresa_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('nombre', 'string', 200, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 200,
             ));
        $this->hasColumn('acronimo', 'string', 20, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('tipo', 'tinyint', null, array(
             'type' => 'tinyint',
             'unsigned' => true,
             'notnull' => true,
             ));
        $this->hasColumn('descripcion', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Oferta', array(
             'local' => 'id',
             'foreign' => 'deposito_id'));

        $this->hasMany('Inventario', array(
             'local' => 'id',
             'foreign' => 'deposito_id'));

        $this->hasOne('Empresa', array(
             'local' => 'empresa_id',
             'foreign' => 'id'));

        $this->hasMany('Factura', array(
             'local' => 'id',
             'foreign' => 'deposito_id'));

        $this->hasMany('NotaEntrega', array(
             'local' => 'id',
             'foreign' => 'deposito_id'));

        $this->hasMany('Traslado', array(
             'local' => 'id',
             'foreign' => 'deposito_desde'));

        $this->hasMany('ServerConf', array(
             'local' => 'id',
             'foreign' => 'deposito_id'));

        $this->hasMany('Kardex', array(
             'local' => 'id',
             'foreign' => 'deposito_id'));

        $this->hasMany('ProdVendidos', array(
             'local' => 'id',
             'foreign' => 'deposito_id'));

        $this->hasMany('ProdComprados', array(
             'local' => 'id',
             'foreign' => 'deposito_id'));

        $this->hasMany('InvAjuste', array(
             'local' => 'id',
             'foreign' => 'deposito_id'));

        $this->hasMany('InvEntrada', array(
             'local' => 'id',
             'foreign' => 'deposito_id'));

        $this->hasMany('InvSalida', array(
             'local' => 'id',
             'foreign' => 'deposito_id'));

        $this->hasMany('AlmacenTransito', array(
             'local' => 'id',
             'foreign' => 'deposito_id'));

        $this->hasMany('OrdenCompra', array(
             'local' => 'id',
             'foreign' => 'deposito_id'));

        $this->hasMany('FacturaCompra', array(
             'local' => 'id',
             'foreign' => 'deposito_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $signable0 = new Doctrine_Template_Signable();
        $this->actAs($timestampable0);
        $this->actAs($signable0);
    }
}