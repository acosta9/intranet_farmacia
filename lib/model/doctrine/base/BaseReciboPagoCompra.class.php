<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ReciboPagoCompra', 'doctrine');

/**
 * BaseReciboPagoCompra
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $empresa_id
 * @property integer $proveedor_id
 * @property integer $cuentas_pagar_id
 * @property string $ncontrol
 * @property tinyint $moneda
 * @property integer $forma_pago_id
 * @property integer $banco_id
 * @property string $num_recibo
 * @property date $fecha
 * @property string $monto
 * @property string $monto2
 * @property string $quien_paga
 * @property string $url_imagen
 * @property string $tasa_cambio
 * @property string $descripcion
 * @property boolean $anulado
 * @property CuentasPagar $CuentasPagar
 * @property FormaPago $FormaPago
 * @property Empresa $Empresa
 * @property Proveedor $Proveedor
 * @property Banco $Banco
 * 
 * @method integer          getId()               Returns the current record's "id" value
 * @method integer          getEmpresaId()        Returns the current record's "empresa_id" value
 * @method integer          getProveedorId()      Returns the current record's "proveedor_id" value
 * @method integer          getCuentasPagarId()   Returns the current record's "cuentas_pagar_id" value
 * @method string           getNcontrol()         Returns the current record's "ncontrol" value
 * @method tinyint          getMoneda()           Returns the current record's "moneda" value
 * @method integer          getFormaPagoId()      Returns the current record's "forma_pago_id" value
 * @method integer          getBancoId()          Returns the current record's "banco_id" value
 * @method string           getNumRecibo()        Returns the current record's "num_recibo" value
 * @method date             getFecha()            Returns the current record's "fecha" value
 * @method string           getMonto()            Returns the current record's "monto" value
 * @method string           getMonto2()           Returns the current record's "monto2" value
 * @method string           getQuienPaga()        Returns the current record's "quien_paga" value
 * @method string           getUrlImagen()        Returns the current record's "url_imagen" value
 * @method string           getTasaCambio()       Returns the current record's "tasa_cambio" value
 * @method string           getDescripcion()      Returns the current record's "descripcion" value
 * @method boolean          getAnulado()          Returns the current record's "anulado" value
 * @method CuentasPagar     getCuentasPagar()     Returns the current record's "CuentasPagar" value
 * @method FormaPago        getFormaPago()        Returns the current record's "FormaPago" value
 * @method Empresa          getEmpresa()          Returns the current record's "Empresa" value
 * @method Proveedor        getProveedor()        Returns the current record's "Proveedor" value
 * @method Banco            getBanco()            Returns the current record's "Banco" value
 * @method ReciboPagoCompra setId()               Sets the current record's "id" value
 * @method ReciboPagoCompra setEmpresaId()        Sets the current record's "empresa_id" value
 * @method ReciboPagoCompra setProveedorId()      Sets the current record's "proveedor_id" value
 * @method ReciboPagoCompra setCuentasPagarId()   Sets the current record's "cuentas_pagar_id" value
 * @method ReciboPagoCompra setNcontrol()         Sets the current record's "ncontrol" value
 * @method ReciboPagoCompra setMoneda()           Sets the current record's "moneda" value
 * @method ReciboPagoCompra setFormaPagoId()      Sets the current record's "forma_pago_id" value
 * @method ReciboPagoCompra setBancoId()          Sets the current record's "banco_id" value
 * @method ReciboPagoCompra setNumRecibo()        Sets the current record's "num_recibo" value
 * @method ReciboPagoCompra setFecha()            Sets the current record's "fecha" value
 * @method ReciboPagoCompra setMonto()            Sets the current record's "monto" value
 * @method ReciboPagoCompra setMonto2()           Sets the current record's "monto2" value
 * @method ReciboPagoCompra setQuienPaga()        Sets the current record's "quien_paga" value
 * @method ReciboPagoCompra setUrlImagen()        Sets the current record's "url_imagen" value
 * @method ReciboPagoCompra setTasaCambio()       Sets the current record's "tasa_cambio" value
 * @method ReciboPagoCompra setDescripcion()      Sets the current record's "descripcion" value
 * @method ReciboPagoCompra setAnulado()          Sets the current record's "anulado" value
 * @method ReciboPagoCompra setCuentasPagar()     Sets the current record's "CuentasPagar" value
 * @method ReciboPagoCompra setFormaPago()        Sets the current record's "FormaPago" value
 * @method ReciboPagoCompra setEmpresa()          Sets the current record's "Empresa" value
 * @method ReciboPagoCompra setProveedor()        Sets the current record's "Proveedor" value
 * @method ReciboPagoCompra setBanco()            Sets the current record's "Banco" value
 * 
 * @package    ired.localhost
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseReciboPagoCompra extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('recibo_pago_compra');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'length' => 4,
             ));
        $this->hasColumn('empresa_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('proveedor_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('cuentas_pagar_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('ncontrol', 'string', 20, array(
             'type' => 'string',
             'notnull' => false,
             'unique' => false,
             'length' => 20,
             ));
        $this->hasColumn('moneda', 'tinyint', null, array(
             'type' => 'tinyint',
             'unsigned' => true,
             'notnull' => true,
             ));
        $this->hasColumn('forma_pago_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('banco_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => false,
             'length' => 4,
             ));
        $this->hasColumn('num_recibo', 'string', 20, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 20,
             ));
        $this->hasColumn('fecha', 'date', 25, array(
             'type' => 'date',
             'notnull' => true,
             'length' => 25,
             ));
        $this->hasColumn('monto', 'string', 20, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('monto2', 'string', 20, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 20,
             ));
        $this->hasColumn('quien_paga', 'string', 200, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 200,
             ));
        $this->hasColumn('url_imagen', 'string', 200, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 200,
             ));
        $this->hasColumn('tasa_cambio', 'string', 20, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('descripcion', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '',
             ));
        $this->hasColumn('anulado', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('CuentasPagar', array(
             'local' => 'cuentas_pagar_id',
             'foreign' => 'id'));

        $this->hasOne('FormaPago', array(
             'local' => 'forma_pago_id',
             'foreign' => 'id'));

        $this->hasOne('Empresa', array(
             'local' => 'empresa_id',
             'foreign' => 'id'));

        $this->hasOne('Proveedor', array(
             'local' => 'proveedor_id',
             'foreign' => 'id'));

        $this->hasOne('Banco', array(
             'local' => 'banco_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $signable0 = new Doctrine_Template_Signable();
        $this->actAs($timestampable0);
        $this->actAs($signable0);
    }
}