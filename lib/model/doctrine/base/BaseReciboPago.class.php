<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ReciboPago', 'doctrine');

/**
 * BaseReciboPago
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $empresa_id
 * @property integer $cliente_id
 * @property integer $cuentas_cobrar_id
 * @property string $ncontrol
 * @property tinyint $moneda
 * @property integer $forma_pago_id
 * @property string $num_recibo
 * @property date $fecha
 * @property string $monto
 * @property string $monto2
 * @property string $quien_paga
 * @property string $url_imagen
 * @property string $tasa_cambio
 * @property string $descripcion
 * @property boolean $anulado
 * @property CuentasCobrar $CuentasCobrar
 * @property FormaPago $FormaPago
 * @property Empresa $Empresa
 * @property Cliente $Cliente
 * 
 * @method integer       getId()                Returns the current record's "id" value
 * @method integer       getEmpresaId()         Returns the current record's "empresa_id" value
 * @method integer       getClienteId()         Returns the current record's "cliente_id" value
 * @method integer       getCuentasCobrarId()   Returns the current record's "cuentas_cobrar_id" value
 * @method string        getNcontrol()          Returns the current record's "ncontrol" value
 * @method tinyint       getMoneda()            Returns the current record's "moneda" value
 * @method integer       getFormaPagoId()       Returns the current record's "forma_pago_id" value
 * @method string        getNumRecibo()         Returns the current record's "num_recibo" value
 * @method date          getFecha()             Returns the current record's "fecha" value
 * @method string        getMonto()             Returns the current record's "monto" value
 * @method string        getMonto2()            Returns the current record's "monto2" value
 * @method string        getQuienPaga()         Returns the current record's "quien_paga" value
 * @method string        getUrlImagen()         Returns the current record's "url_imagen" value
 * @method string        getTasaCambio()        Returns the current record's "tasa_cambio" value
 * @method string        getDescripcion()       Returns the current record's "descripcion" value
 * @method boolean       getAnulado()           Returns the current record's "anulado" value
 * @method CuentasCobrar getCuentasCobrar()     Returns the current record's "CuentasCobrar" value
 * @method FormaPago     getFormaPago()         Returns the current record's "FormaPago" value
 * @method Empresa       getEmpresa()           Returns the current record's "Empresa" value
 * @method Cliente       getCliente()           Returns the current record's "Cliente" value
 * @method ReciboPago    setId()                Sets the current record's "id" value
 * @method ReciboPago    setEmpresaId()         Sets the current record's "empresa_id" value
 * @method ReciboPago    setClienteId()         Sets the current record's "cliente_id" value
 * @method ReciboPago    setCuentasCobrarId()   Sets the current record's "cuentas_cobrar_id" value
 * @method ReciboPago    setNcontrol()          Sets the current record's "ncontrol" value
 * @method ReciboPago    setMoneda()            Sets the current record's "moneda" value
 * @method ReciboPago    setFormaPagoId()       Sets the current record's "forma_pago_id" value
 * @method ReciboPago    setNumRecibo()         Sets the current record's "num_recibo" value
 * @method ReciboPago    setFecha()             Sets the current record's "fecha" value
 * @method ReciboPago    setMonto()             Sets the current record's "monto" value
 * @method ReciboPago    setMonto2()            Sets the current record's "monto2" value
 * @method ReciboPago    setQuienPaga()         Sets the current record's "quien_paga" value
 * @method ReciboPago    setUrlImagen()         Sets the current record's "url_imagen" value
 * @method ReciboPago    setTasaCambio()        Sets the current record's "tasa_cambio" value
 * @method ReciboPago    setDescripcion()       Sets the current record's "descripcion" value
 * @method ReciboPago    setAnulado()           Sets the current record's "anulado" value
 * @method ReciboPago    setCuentasCobrar()     Sets the current record's "CuentasCobrar" value
 * @method ReciboPago    setFormaPago()         Sets the current record's "FormaPago" value
 * @method ReciboPago    setEmpresa()           Sets the current record's "Empresa" value
 * @method ReciboPago    setCliente()           Sets the current record's "Cliente" value
 * 
 * @package    ired.localhost
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseReciboPago extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('recibo_pago');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'length' => 4,
             ));
        $this->hasColumn('empresa_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('cliente_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('cuentas_cobrar_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('ncontrol', 'string', 20, array(
             'type' => 'string',
             'notnull' => false,
             'unique' => false,
             'length' => 20,
             ));
        $this->hasColumn('moneda', 'tinyint', null, array(
             'type' => 'tinyint',
             'unsigned' => true,
             'notnull' => true,
             ));
        $this->hasColumn('forma_pago_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('num_recibo', 'string', 20, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 20,
             ));
        $this->hasColumn('fecha', 'date', 25, array(
             'type' => 'date',
             'notnull' => true,
             'length' => 25,
             ));
        $this->hasColumn('monto', 'string', 20, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('monto2', 'string', 20, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 20,
             ));
        $this->hasColumn('quien_paga', 'string', 200, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 200,
             ));
        $this->hasColumn('url_imagen', 'string', 200, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 200,
             ));
        $this->hasColumn('tasa_cambio', 'string', 20, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('descripcion', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '',
             ));
        $this->hasColumn('anulado', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('CuentasCobrar', array(
             'local' => 'cuentas_cobrar_id',
             'foreign' => 'id'));

        $this->hasOne('FormaPago', array(
             'local' => 'forma_pago_id',
             'foreign' => 'id'));

        $this->hasOne('Empresa', array(
             'local' => 'empresa_id',
             'foreign' => 'id'));

        $this->hasOne('Cliente', array(
             'local' => 'cliente_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $signable0 = new Doctrine_Template_Signable();
        $this->actAs($timestampable0);
        $this->actAs($signable0);
    }
}