<?php

/**
 * CuentasCobrar
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    ired.localhost
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class CuentasCobrar extends BaseCuentasCobrar
{
  public function getEmpresaName() {
    return $this["emin"];
  }

  public function getClienteName() {
    return $this["cname"];
  }

  public function  getRif() {
    return $this["docid"];
  }

  public function getCreatedAtTxt() {
    return mb_strtoupper(format_datetime($this->getCreatedAt(), 'D', 'es_ES'));
  }
  public function getUpdatedAtTxt() {
    return format_datetime($this->getUpdatedAt(), 'f', 'es_ES');
  }

  public function putPagar($monto) {
    $monto_pagado=number_float3($monto);
    $monto_pagado_new=number_format(number_float3($this->getMontoPagado())+$monto_pagado, 4, '.', ' ');
    $monto_pagado_tmp=number_float3($this->getMontoPagado())+$monto_pagado;
    $monto_faltante=number_format(number_float3($this->getTotal())-$monto_pagado_tmp, 4, '.', ' ');
    $monto_faltante_tmp=number_float3($this->getTotal())-$monto_pagado_tmp;
    $estatus=0;
    $desc="";
    if($monto_faltante_tmp==0){
      $estatus=3;
      //$desc='<span style="text-decoration: underline;">PAGO TOTAL DE LA <b>PRE-FACTURA N° 000004504A</b> DE FECHA 01/06/2020</span>';
      $desc=$desc.'<span style="text-decoration: underline;">PAGO TOTAL DE LA ';
    } else if($monto_faltante>0){
      $estatus=2;
      $desc=$desc.'<span style="text-decoration: underline;">ABONO DE LA ';
    }
    if($this->getFacturaId()) {
      $factura = Doctrine_Core::getTable('Factura')->findOneBy('id', $this->getFacturaId());
      $factura->monto_faltante=$monto_faltante;
      $factura->monto_pagado=$monto_pagado_new;
      $factura->estatus=$estatus;
      $factura->save();
      $desc=$desc.'<b>FACTURA N° '.$factura->getNumFactura().'</b> DE FECHA '.date("d/m/Y", strtotime($factura->getFecha())).'</span>';
    } else {
      $nota_entrega = Doctrine_Core::getTable('NotaEntrega')->findOneBy('id', $this->getNotaEntregaId());
      $nota_entrega->monto_faltante=$monto_faltante;
      $nota_entrega->monto_pagado=$monto_pagado_new;
      $nota_entrega->estatus=$estatus;
      $nota_entrega->save();
      $desc=$desc.'<b>NOTA DE ENTREGA N° '.$nota_entrega->getNcontrol().'</b> DE FECHA '.date("d/m/Y", strtotime($nota_entrega->getFecha())).'</span>';
    }
    $cuenta_cobrar = Doctrine_Core::getTable('CuentasCobrar')->findOneBy('id', $this->getId());
    $cuenta_cobrar->monto_faltante=$monto_faltante;
    $cuenta_cobrar->monto_pagado=$monto_pagado_new;
    $cuenta_cobrar->estatus=$estatus;
    $cuenta_cobrar->save();

    return $desc;
  }

  public function putAnular($monto) {
    $monto_pagado=number_float3($monto);
    $monto_pagado_new=number_format(number_float3($this->getMontoPagado())-$monto_pagado, 4, '.', ' ');
    $monto_pagado_tmp=number_float3($this->getMontoPagado())-$monto_pagado;
    $monto_faltante=number_format(number_float3($this->getTotal())-$monto_pagado_tmp, 4, '.', ' ');
    $monto_faltante_tmp=number_float3($this->getTotal())-$monto_pagado_tmp;
    $estatus=0;
    if($monto_pagado_tmp==0){
      $estatus=1;
    } else if($monto_pagado_tmp>0){
      $estatus=2;
    }
    if($this->getFacturaId()) {
      $factura = Doctrine_Core::getTable('Factura')->findOneBy('id', $this->getFacturaId());
      $factura->monto_faltante=$monto_faltante;
      $factura->monto_pagado=$monto_pagado_new;
      $factura->estatus=$estatus;
      $factura->save();
    } else {
      $nota_entrega = Doctrine_Core::getTable('NotaEntrega')->findOneBy('id', $this->getNotaEntregaId());
      $nota_entrega->monto_faltante=$monto_faltante;
      $nota_entrega->monto_pagado=$monto_pagado_new;
      $nota_entrega->estatus=$estatus;
      $nota_entrega->save();
    }
    $cuenta_cobrar = Doctrine_Core::getTable('CuentasCobrar')->findOneBy('id', $this->getId());
    $cuenta_cobrar->monto_faltante=$monto_faltante;
    $cuenta_cobrar->monto_pagado=$monto_pagado_new;
    $cuenta_cobrar->estatus=$estatus;
    $cuenta_cobrar->save();
  }

}

function number_float3($str) {
  $stripped = str_replace(' ', '', $str);
  $number = str_replace(',', '', $stripped);
  return floatval($number);
}
