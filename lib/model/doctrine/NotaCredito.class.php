<?php

/**
 * NotaCredito
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    ired.localhost
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class NotaCredito extends BaseNotaCredito
{
  public function getCoin() {
    if($this->getMoneda()==1) {
      return "BS";
    } else {
      return "USD";
    }
  }
  public function getMontoCoin() {
    return "USD ".number_format($this->getMonto(), 4, '.', ',');
  }
  public function getFechaTxt() {
    return strtoupper(format_datetime($this->getFecha(), 'D', 'es_ES'));
  }
  public function getForPago() {
    return $this["fpago"];
  }
  public function getForPagoCoin() {
    return $this["fpago"]." ".$this->getCoin();
  }
  public function getEmpresaName() {
    return strtoupper($this["ename"]);
  }
  public function getCompany() {
    return strtoupper($this["emin"]);
  }
  public function getClienteName() {
    return $this["cname"];
  }
  public function getCoinMonto() {
    return $this->getCoin()." ".$this->getMonto();
  }
  public function getCreatedAtTxt() {
    return format_datetime($this->getCreatedAt(), 'f', 'es_ES');
  }
  public function getUpdatedAtTxt() {
    return format_datetime($this->getUpdatedAt(), 'f', 'es_ES');
  }

  public function putProcesar($ccid) {
    $val=0;
    $nota_credito = Doctrine_Core::getTable('NotaCredito')->findOneBy('id', $this->getId());
    $cuentas_cobrar = Doctrine_Core::getTable('CuentasCobrar')->findOneBy('id', $ccid);

    $ccfaltante=number_float3($cuentas_cobrar->getMontoFaltante());
    $ncfaltante=number_float3($this->getMontoFaltante());

    if(($ccfaltante-$ncfaltante)>=0) {
      $desc=$cuentas_cobrar->putPagar($ncfaltante);
      $nota_credito->monto_faltante=0.00;
      $nota_credito->estatus=2;
      $nota_credito->save();

      $nota_credito_det = new NotaCreditoDet();
      $nota_credito_det->nota_credito_id=$nota_credito->getId();
      $nota_credito_det->cuentas_cobrar_id=$ccid;
      $nota_credito_det->monto=$ncfaltante;
      $nota_credito_det->descripcion=$desc;
      $nota_credito_det->save();
      $val=1;
    } else {
      $monto_new=$ncfaltante-$ccfaltante;
      $desc=$cuentas_cobrar->putPagar($ccfaltante);
      $nota_credito->monto_faltante=$monto_new;
      $nota_credito->estatus=1;
      $nota_credito->save();

      $nota_credito_det = new NotaCreditoDet();
      $nota_credito_det->nota_credito_id=$nota_credito->getId();
      $nota_credito_det->cuentas_cobrar_id=$ccid;
      $nota_credito_det->monto=$ccfaltante;
      $nota_credito_det->descripcion=$desc;
      $nota_credito_det->save();
    }
    return $val;
  }

  public function putAnular($id) {
    $val=0;
    $nota_credito = Doctrine_Core::getTable('NotaCredito')->findOneBy('id', $this->getId());

    $nota_credito_det = Doctrine_Core::getTable('NotaCreditoDet')->findOneBy('id', $id);
    $nota_credito_det->anulado=1;
    $nota_credito_det->save();

    $cuentas_cobrar = Doctrine_Core::getTable('CuentasCobrar')->findOneBy('id', $nota_credito_det->getCuentasCobrarId());
    $cuentas_cobrar->putAnular($nota_credito_det->getMonto());

    $ncpendiente=number_float3($nota_credito->getMontoFaltante());
    $ncdmonto=number_float3($nota_credito_det->getMonto());
    $new_pendiente=$ncpendiente+$ncdmonto;

    $nota_credito->monto_faltante=$new_pendiente;
    $nota_credito->estatus=1;
    $nota_credito->save();

  }
}
